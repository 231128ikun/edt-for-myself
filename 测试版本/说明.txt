参数说明（逐项 — 包含类型、默认值、是否必需、用途与示例）

我把参数按“核心”“连接/传输”“安全/白名单”“并发/超时/缓冲”“Durable Object 全局”几类列出。

A. 核心身份与展示（必需）

USER_ID

类型：字符串

默认：'123456'

必需：否，但建议设置（用于页面/订阅路径）

用途：生成页面地址 https://<host>/<USER_ID> 与订阅路径 /<USER_ID>/vless。

示例：USER_ID=10001

UUID

类型：字符串（标准 UUID）

默认：'aaa6b096-1165-4bbe-935c-99f4ec902d02'

必需：是（用于授权客户端）

用途：客户端在 VLESS 协议头中提供该 UUID；Worker 用它做验证。

示例：UUID=0f8fad5b-d9cb-469f-a165-70867728950e

NODE_NAME

类型：字符串

默认：'IKUN-Vless'

必需：否（仅用于页面显示与节点链接）

用途：显示在生成的 HTML 页面和节点链接的注释（# 后面）。

示例：NODE_NAME=MyVlessNode

B. 连接 / 代理 / NAT64（可选）

BEST_IPS

类型：换行或逗号分隔字符串列表

默认：内置数组（developers.cloudflare.com, ip.sb, ...）

必需：否

用途：生成节点链接用作备用地址列表。

示例：BEST_IPS=1.2.3.4,example.com

PROXY_IP

类型：host:port 字符串

默认：空（表示不使用）

必需：否

用途：在直连失败时用作备用连接（反代）。

示例：PROXY_IP=sjc.o00o.ooo:443

ENABLE_NAT64

类型："true" / "false"

默认："false"

必需：否

用途：如果启用并目标是 IPv4，则尝试转换成 NAT64 IPv6 地址并连接（用于 IPv6-only 环境）。

示例：ENABLE_NAT64=true

ENABLE_BATCHING

类型："true" / "false"

默认："false"（默认使用直接写入，低延迟）

必需：否

用途：切换为“批处理写入”模式以提高吞吐量（会在内存与延迟上有所取舍）。

示例：ENABLE_BATCHING=true

C. 安全 / 访问控制（可选但强烈建议）

ALLOW_HOSTS

类型：换行或逗号分隔字符串列表（域名或 IP）

默认：未设置（表示允许公网主机，但会排除私网/回环地址）

必需：否（但建议在生产中使用白名单）

用途：如果设置，只允许这些 host 或其子域访问（例如 example.com 允许 a.example.com）。

示例：ALLOW_HOSTS=example.com,api.example.org

ALLOW_PORTS

类型：逗号或换行分隔的端口数字列表

默认：未设置（表示允许所有端口，除被 DENY 列表）

必需：否

用途：当你只想允许一小部分端口（例如 80,443）时设置。

示例：ALLOW_PORTS=80,443

DENY_PORTS

类型：逗号或换行分隔的端口数字列表

默认：25,110,143,465,587（阻止常见邮件端口）

必需：否（推荐保持默认阻止邮件端口）

用途：明确阻止某些端口以避免被滥用（如 SMTP）。

示例：DENY_PORTS=25,110,143,465,587

D. 并发 / 超时 / 缓冲（性能调优）

CONNECTION_TIMEOUT

类型：整数（毫秒）

默认：3000

用途：connect() 的超时时间（尝试连接目标的超时）。

示例：CONNECTION_TIMEOUT=3000

WRITE_TIMEOUT

类型：整数（毫秒）

默认：500

用途：写入 socket 的最大允许时间（避免写卡住造成资源占用）。

示例：WRITE_TIMEOUT=500

QUEUE_LIMIT

类型：整数（条数）

默认：25

用途：批处理写入时的队列上限，超过则丢弃最旧数据以防 OOM。

示例：QUEUE_LIMIT=25

BUFFER_SIZE

类型：整数（字节）

默认：169384

用途：合并写入时的合并缓冲区上限大小。

示例：BUFFER_SIZE=65536

MAX_CONCURRENT_WRITES

类型：整数

默认：4

用途：批处理时并发写入的限制（减少并发写带来的资源冲击）。

示例：MAX_CONCURRENT_WRITES=4

POOL_SIZE

类型：整数

默认：10

用途：内存缓冲池大小（可降低内存分配开销）。

示例：POOL_SIZE=10

CONNECT_ATTEMPT_PARALLEL

类型：整数

默认：2

用途：每个请求内允许的并发外连尝试数（限制并行 connect() 调用数量以降低峰值并发）。

示例：CONNECT_ATTEMPT_PARALLEL=2

E. Durable Object（全局并发控制，可选）

ENABLE_GLOBAL_LIMITER

类型："true" / "false"

默认："false"

用途：是否启用 Durable Object 全局并发限制（若启用，务必在 wrangler 中绑定 ConnectionLimiter）。

示例：ENABLE_GLOBAL_LIMITER=true

GLOBAL_ACQUIRE_RETRIES

类型：整数

默认：3

用途：尝试从 DO 获取全局配额的重试次数（指数退避）。

示例：GLOBAL_ACQUIRE_RETRIES=3

GLOBAL_ACQUIRE_BACKOFF_MS

类型：整数（毫秒）

默认：100

用途：DO 获取失败后的基础退避时间（会按 2^i 放大）。

示例：GLOBAL_ACQUIRE_BACKOFF_MS=100

MAX_GLOBAL_CONN（在 DO 环境变量里）

类型：整数

默认：100（DO 层默认）

用途：Durable Object 中设置的全站并发上限（由 DO 的 env.MAX_GLOBAL_CONN 决定）。

示例：MAX_GLOBAL_CONN=200（在 wrangler 中为 DO 的 env）

推荐部署示例（wrangler.toml 片段）

如果使用 Durable Object，请在 wrangler.toml 中绑定 DO（示例）：

name = "vless-worker"
main = "./index.js"
compatibility_date = "2025-09-02"

[vars]
USER_ID = "10001"
UUID = "0f8fad5b-d9cb-469f-a165-70867728950e"
NODE_NAME = "MyVlessNode"
ENABLE_GLOBAL_LIMITER = "true"
ENABLE_BATCHING = "false"
CONNECT_ATTEMPT_PARALLEL = "2"
MAX_CONCURRENT_WRITES = "4"
# ALLOW_HOSTS = "example.com"

# Durable Object binding
[[durable_objects]]
name = "ConnectionLimiter"
class_name = "ConnectionLimiter"
