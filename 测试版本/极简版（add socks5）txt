import{connect}from'cloudflare:sockets';
const U='123456',I='aaa6b096-1165-4bbe-935c-99f4ec902d02',P='sjc.o00o.ooo:443',N='IKUN-Vless',S5='socks5://123:123@54.193.123.84:1080',G=true,B=['developers.cloudflare.com','ip.sb','www.visa.cn','ikun.glimmer.cf.090227.xyz'],IB=new Uint8Array(I.replace(/-/g,'').match(/.{2}/g).map(x=>parseInt(x,16)));
const b64u=s=>Uint8Array.from(atob(s.replace(/-/g,'+').replace(/_/g,'/')),c=>c.charCodeAt(0)),
parse=d=>{d=new Uint8Array(d);const o=18+d[17]+1,pt=(d[o]<<8)|d[o+1];let p=o+3,t=d[o+2],h;if(t===1)h=`${d[p++]}.${d[p++]}.${d[p++]}.${d[p++]}`;else if(t===2){const l=d[p++];h=new TextDecoder().decode(d.subarray(p,p+l));p+=l;}else{h=Array.from({length:8},(_,i)=>((d[p+2*i]<<8)|d[p+2*i+1]).toString(16)).join(':');p+=16;}return{h,pt,data:d.slice(p)};},
s5parse=()=>{const w=S5.slice(9);if(w.includes('@')){const[c,hp]=w.split('@'),[us,ps]=c.split(':'),[h,p=1080]=hp.split(':');return{h,p:+p,us,ps};}const[h,p=1080]=w.split(':');return{h,p:+p,us:'',ps:'');},
s5conn=async(th,tp,c)=>{const s=connect({hostname:c.h,port:c.p});await s.opened;const w=s.writable.getWriter(),r=s.readable.getReader();try{await w.write(new Uint8Array([5,2,0,2]));const ar=(await r.read()).value;if(ar[0]!==5)throw'Invalid';if(ar[1]===2&&c.us){const ub=new TextEncoder().encode(c.us),pb=new TextEncoder().encode(c.ps);await w.write(new Uint8Array([1,ub.length,...ub,pb.length,...pb]));if((await r.read()).value[1]!==0)throw'Auth failed';}else if(ar[1]!==0)throw'Auth not supported';const db=new TextEncoder().encode(th);await w.write(new Uint8Array([5,1,0,3,db.length,...db,tp>>8,tp&255]));if((await r.read()).value[1]!==0)throw'Connect failed';w.releaseLock();r.releaseLock();return s;}catch(e){try{w.releaseLock();r.releaseLock();}catch{}s.close();throw e;}};
const s5c=S5?s5parse():null,conn=async(h,pt)=>{const attempts=[];if(G&&s5c)attempts.push(()=>s5conn(h,pt,s5c));else{attempts.push(()=>connect({hostname:h,port:pt}));if(s5c)attempts.push(()=>s5conn(h,pt,s5c));}if(!G&&P){const[ph,pp]=P.split(':');attempts.push(()=>connect({hostname:ph,port:+pp||pt}));}for(const a of attempts){try{const s=await a();await s.opened;return s;}catch{continue;}}throw'All failed';};
export default{async fetch(r){const host=r.headers.get('Host'),u=new URL(r.url);if(r.headers.get('Upgrade')==='websocket'){const pd=b64u(r.headers.get('sec-websocket-protocol')||'');if(!pd.slice(1,17).every((b,i)=>b===IB[i]))return new Response('',{status:403});const{h,pt,data}=parse(pd.buffer),s=await conn(h,pt),[c,sv]=new WebSocketPair();sv.accept();const w=s.writable.getWriter();sv.send(new Uint8Array([0,0]));data&&w.write(data);sv.addEventListener('message',e=>w.write(new Uint8Array(e.data)));s.readable.pipeTo(new WritableStream({write:chunk=>sv.send(chunk)}));return new Response(null,{status:101,webSocket:c});}if(u.pathname===`/${U}/vless`)return new Response([...B,`${host}:443`].map(ip=>{const[a,pt=443]=ip.split(':');return`vless://${I}@${a}:${pt}?encryption=none&security=tls&type=ws&host=${host}&sni=${host}&path=%2F%3Fed%3D2560#${N}`;}).join('\n'));return new Response('');}}
