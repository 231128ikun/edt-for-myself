import { connect as c } from 'cloudflare:sockets';

const U='aaa6b096-1165-4bbe-935c-99f4ec902d02';
const P='sjc.o00o.ooo:443';
const H=true;

const C=new Map();
const PT=6e4,CT=3e4;
const BH=H?1048576:0;  // false 时关闭流控

function vU(u){return /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(u);}
if(!vU(U))throw new Error('Bad UUID');

function clC(){const n=Date.now();for(const[k,e]of C.entries()){if(n-e.t>PT){try{e.s.close();}catch{}C.delete(k);}}}

export default{async fetch(r){clC();const u=r.headers.get('Upgrade');if(!u||u.toLowerCase()!=='websocket')return Response.redirect('https://example.com',301);
const url=new URL(r.url);
const tempPath=url.pathname+url.search;
const pMatch=tempPath.match(/p=([^&]*)/);
let px=pMatch?pMatch[1]:P;
return vWS(r,px);}};

async function vWS(r,px){
  const wp=new WebSocketPair(),cl=wp[0],sv=wp[1];sv.accept();
  const eh=r.headers.get('sec-websocket-protocol')||'',rs=mRS(sv,eh);
  let rr={v:null},uw=null,dns=false;
  rs.pipeTo(new WritableStream({async write(ch){
    const d=nU8(ch);if(!d.length)return;
    if(dns&&uw)return uw(d);
    if(rr.v){await bW(rr.v,d);return;}
    const p=pVH(d.buffer,U);if(p.err)throw new Error(p.msg);
    const {ar,pr,ri,vv,udp}=p;if(udp){if(pr!==53)throw new Error('udp only 53');dns=true;}
    const vh=new Uint8Array([vv[0],0]),ip=d.slice(ri);
    if(dns){const w=await hUDP(sv,vh);uw=w.w.bind(w);if(ip.length)uw(ip);return;}
    hTCP(rr,ar,pr,ip,sv,vh,px);
  }})).catch(()=>{});
  return new Response(null,{status:101,webSocket:cl});
}

function pVH(b,u){
  if(!b||b.byteLength<24)return{err:1,msg:'bad data'};
  const d=new Uint8Array(b),v=d[0],ub=Uint8Array.from(u.replace(/-/g,'').match(/.{2}/g).map(x=>parseInt(x,16)));
  for(let i=0;i<16;i++)if(d[1+i]!==ub[i])return{err:1,msg:'bad uid'};
  const ol=d[17],cmd=d[18+ol];if(cmd!==1&&cmd!==2)return{err:1,msg:'bad cmd '+cmd};
  const udp=cmd===2,pi=18+ol+1,pr=new DataView(b,pi,2).getUint16(0);let ai=pi+2,ar='',at=d[ai++];
  if(at===1){ar=Array.from(d.slice(ai,ai+4)).join('.');ai+=4;}
  else if(at===2){const l=d[ai++];ar=new TextDecoder().decode(b.slice(ai,ai+l));ai+=l;}
  else if(at===3){const dv=new DataView(b,ai,16),ps=[];for(let i=0;i<8;i++)ps.push(dv.getUint16(i*2).toString(16));ar=ps.join(':');ai+=16;}
  else return{err:1,msg:'bad at'};
  return{err:0,ar,pr,ri:ai,vv:new Uint8Array([v]),udp};
}

async function hTCP(rr,a,p,fp,sv,vh,px){
  const k=`${a}:${p}`;let e=C.get(k);
  async function nc(){const s=c({hostname:a,port:p});let id;await Promise.race([s.opened,new Promise((_,j)=>{id=setTimeout(()=>j(new Error('ct')),CT);})]).finally(()=>{if(id)clearTimeout(id);});const en={s,t:Date.now()};C.set(k,en);return en;}
  try{if(!e||e.s.closed)e=await nc();else e.t=Date.now();rr.v=e.s;if(fp.length)await bW(e.s,fp);r2w(e.s,sv,vh);return;}
  catch(er){console.error('direct fail',a,p,er.message);}
  const[ph,pp]=pHP(px,p);
  try{const s=c({hostname:ph,port:pp});let id;await Promise.race([s.opened,new Promise((_,j)=>{id=setTimeout(()=>j(new Error('pt')),CT);})]).finally(()=>{if(id)clearTimeout(id);});rr.v=s;if(fp.length)await bW(s,fp);r2w(s,sv,vh);}
  catch(er){console.error('proxy fail',ph,pp,er.message);try{sv.close();}catch{}}}

async function r2w(rs,sv,vh){
  let h=vh;const r=rs.readable.getReader();
  try{for(;;){if(H&&sv.bufferedAmount>BH)await wFD(sv);const {value,done}=await r.read();if(done)break;if(!value)continue;const u=nU8(value);
    if(h){const b=new Uint8Array(h.length+u.length);b.set(h,0);b.set(u,h.length);sv.send(b);h=null;}
    else sv.send(u);}
  }finally{try{r.releaseLock();}catch{}}}

async function bW(s,ch){if(!s._q)s._q=Promise.resolve();s._q=s._q.then(async()=>{const w=s.writable.getWriter();try{await w.write(ch);}catch{}try{w.releaseLock();}catch{}});}

async function wFD(ws){const t=BH*0.5;while(ws.bufferedAmount>t)await new Promise(r=>setTimeout(r,10));}

async function hUDP(sv,vh){
  let hs=false;
  return{w:async ch=>{
    if(ch.length<2)return;const l=(ch[0]<<8)|ch[1];if(ch.length<2+l)return;const q=ch.slice(2,2+l);
    try{const r=await fetch('https://8.8.8.8',{method:'POST',headers:{'content-type':'application/dns-message'},body:q});
      const dr=new Uint8Array(await r.arrayBuffer()),lb=new Uint8Array([(dr.length>>8)&255,dr.length&255]);
      if(!hs){const o=new Uint8Array(vh.length+2+dr.length);o.set(vh,0);o.set(lb,vh.length);o.set(dr,vh.length+2);sv.send(o.buffer);hs=true;}
      else{const o2=new Uint8Array(2+dr.length);o2.set(lb,0);o2.set(dr,2);sv.send(o2.buffer);}
    }catch{}}};}

function nU8(x){if(!x)return new Uint8Array(0);if(x instanceof Uint8Array)return x;if(x instanceof ArrayBuffer)return new Uint8Array(x);if(ArrayBuffer.isView(x))return new Uint8Array(x.buffer,x.byteOffset,x.byteLength);return new Uint8Array(0);}
function b642u(b){if(!b)return{ed:null,er:null};try{let s=b.replace(/-/g,'+').replace(/_/g,'/');while(s.length%4)s+='=';const raw=atob(s);return{ed:Uint8Array.from(raw,c=>c.charCodeAt(0)),er:null};}catch(e){return{ed:null,er:e};}}
function mRS(ws,eh){let c=false;return new ReadableStream({start(co){ws.addEventListener('message',e=>{if(!c)co.enqueue(e.data);});ws.addEventListener('close',()=>{if(!c)co.close();});ws.addEventListener('error',er=>{co.error(er);});const {ed}=b642u(eh);if(ed)co.enqueue(ed);},cancel(){c=true;try{ws.close();}catch{}}});}
function pHP(s,dp=443){if(!s)return[null,dp];if(s.includes(']:')){const h=s.split(']:')[0]+']';const p=Number(s.split(']:')[1])||dp;return[h,p];}else if(s.split(':').length===2){const[h,p]=s.split(':');return[h,Number(p)||dp];}else return[s,dp];}
